fastq-mcf:
    '{executable}
     -u
     -q 20
     -P 33
     -x 10
     -l 50
     -o {forward_output}
     -o {reverse_output}
     {illumina_adapters}
     {forward_reads}
     {reverse_reads}'

bwa:
    # output goes to STDOUT
    '{executable} mem
     -t 8
     {reference_genome}
     {forward_reads}
     {reverse_reads}'

picard AddOrReplaceReadGroups:
    # SO = SortOrder for the output
    '{executable}
     AddOrReplaceReadGroups
     I={input_sam}
     ID={sequencing_id}.{library_id}.{platform_unit}.{sample_id}
     SM={sample_id}
     LB={library_id}
     PL={platform}
     PU={platform_unit}
     O={output_bam}
     SO=coordinate
     CREATE_INDEX=True
     VALIDATION_STRINGENCY=LENIENT'

gatk RealignerTargetCreator:
    '{executable}
     -T RealignerTargetCreator
     -I {input_bam}
     -R {reference_genome}
     -known {indels_1000G}
     -known {indels_mills}
     -L {panel_regions}
     -o {outfile}'

gatk IndelRealigner:
    '{executable}
     -T IndelRealigner
     -I {input_bam}
     -R {reference_genome}
     -targetIntervals {targets_file}
     -o {output_bam}'

gatk BaseRecalibrator:
    '{executable}
     -T BaseRecalibrator
     -nct 1
     -I {input_bam}
     -R {reference_genome}
     -L {panel_regions}
     -knownSites {indels_1000G}
     -knownSites {indels_mills}
     -o {outfile}'

gatk PrintReads:
    '{executable}
     -T PrintReads
     -nct 1
     -I {input_bam}
     -BQSR {recalibration_table}
     -R {reference_genome}
     -o {output_bam}'

# gatk HaplotypeCaller variant_sites for_exomes:
    # # https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_engine_CommandLineGATK.php#--interval_padding
    # # --interval_padding: This is typically used to add padding around exons
    # # when analyzing exomes. The general Broad exome calling pipeline uses
    # # 100 bp padding by default.
    # '{executable}
     # -T HaplotypeCaller
     # -I {input_bam}
     # -gt_mode DISCOVERY
     # -ERC BP_RESOLUTION
     # -variant_index_parameter 128000
     # -variant_index_type LINEAR
     # --interval_padding 100
     # -L {panel_regions}
     # -R {reference_genome}
     # -D {dbsnp_GRCh37}
     # -nct 8
     # -o {output_vcf}'

gatk HaplotypeCaller gvcfs: &gatk_HC_gvcfs

    # This step is the same for two pipelines:
    #
    #  * "all_sites" pipeline
    #  * "variant_sites" pipeline
    #
    #  But it differs in the "target_sites" pipeline.

    '{executable}
     -T HaplotypeCaller
     -I {input_bam}
     -gt_mode DISCOVERY
     -ERC GVCF
     -L {panel_regions}
     -R {reference_genome}
     -D {dbsnp_GRCh37}
     -o {output_gvcf}
     -bamout {bamout}'

    # These two options are often seen in the documentation, but I also found
    # that they are only needed for GATK versions older than 3.4, so we are
    # not including them:
    #
    # -variant_index_parameter 128000
    # -variant_index_type LINEAR
    #
    # The -nt and -nct options can't be used when asking for a -bamout

gatk HaplotypeCaller all_sites: *gatk_HC_gvcfs

gatk HaplotypeCaller variant_sites: *gatk_HC_gvcfs

gatk HaplotypeCaller target_sites:

    # GENOTYPE_GIVEN_ALLELES is not very well documented in GATK's guides.
    # https://software.broadinstitute.org/gatk/documentation/article?id=2803
    #
    # -gt_mode and -alleles options to include the panel sites only
    # -L seems to be necessary; the regions include the alleles anyway
    # -ERC cannot be set when GGA is set

    '{executable}
     -T HaplotypeCaller
     -I {input_bam}
     -gt_mode GENOTYPE_GIVEN_ALLELES
     -alleles {panel_variants}
     -L {panel_regions}
     -R {reference_genome}
     -D {dbsnp_GRCh37}
     -o {output_vcf}
     -bamout {output_bam}'

gatk GenotypeGVCFs all_sites:
    # The {input_gvcfs} will be filled in the corresponding
    # task with --variant <GVCF path> for each sample GVCF.
    '{executable}
     -T GenotypeGVCFs
     -allSites
     -L {panel_regions}
     -R {reference_genome}
     -D {dbsnp_GRCh37}
     -nt 1
     {input_gvcfs}
     -o {output_vcf}'

gatk GenotypeGVCFs variant_sites:

    # The only difference between this step and the same step above,
    # of the "all_sites" pipeline, is the missing -allSites parameter.

    # The {input_gvcfs} will be filled in the corresponding
    # task with --variant <GVCF path> for each sample GVCF.
    '{executable}
     -T GenotypeGVCFs
     -L {panel_regions}
     -R {reference_genome}
     -D {dbsnp_GRCh37}
     -nt 1
     {input_gvcfs}
     -o {output_vcf}'

gatk CombineVariants target_sites:
    # The {input_vcfs} will be filled in the corresponding
    # task with --variant <VCF path> for each sample VCF.
    '{executable}
     -T CombineVariants
     -nt 1
     -R {reference_genome}
     {input_vcfs}
     -o {output_vcf}'

snpsift dbSNP:
     # output goes to STDOUT
    '{executable}
     annotate
     -v
     -noAlt
     -id
     -sorted
     {dbsnp_GRCh37}
     {input_vcf}'

